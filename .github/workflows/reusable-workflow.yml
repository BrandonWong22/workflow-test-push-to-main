
name: Reusable workflow

on:
  workflow_call:

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update LINE_COVERAGE Variable
        uses: actions/github-script@v6
        with:
          script: |
            const { GITHUB_TOKEN } = process.env;
            const repo = context.repo;
            const variableName = 'LINE_COVERAGE';
            const newValue = '100';

            // Fetch the existing repository variables
            const response = await github.actions.listRepoVariables({
              owner: repo.owner,
              repo: repo.repo,
            });

            // Find the LINE_COVERAGE variable and update it
            const existingVariable = response.data.find(variable => variable.name === variableName);

            if (existingVariable) {
              // Update the existing variable
              await github.actions.updateRepoVariable({
                owner: repo.owner,
                repo: repo.repo,
                name: variableName,
                value: newValue,
              });
              console.log(`Updated ${variableName} to ${newValue}`);
            } else {
              console.log(`Variable ${variableName} not found`);
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Checkout repository
      #   uses: actions/checkout@v4
      #   # with:
      #   #   token: ${{ secrets.PAT_TOKEN }} # Use the input directly here

      # - name: Install GitHub CLI
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y gh

      # - name: Authenticate GitHub CLI
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      # - name: Update LINE_COVERAGE Variable
      #   run: gh variable set LINE_COVERAGE --body 100



      # - name: Checkout repository
      #   uses: actions/checkout@v4
      #   with:
      #     token: ${{ secrets.PAT_TOKEN }} # Use the input directly here

      # - name: Get GitHub username and email
      #   id: user_info
      #   run: |
      #     echo "GITHUB_USERNAME=${{ github.actor }}" >> $GITHUB_ENV
      #     git_email=$(git log -1 --pretty=format:'%ae')
      #     echo "GITHUB_EMAIL=$git_email" >> $GITHUB_ENV

      # - name: Configure Git
      #   run: |
      #     git config user.name $GITHUB_USERNAME
      #     git config user.email $GITHUB_EMAIL

      # - name: Add line to README
      #   run: |
      #     git pull
      #     echo "hello" >> README.md
      #     git add README.md
      #     git commit -m "Add 'hello' to README.md"
      #     git push origin HEAD:main
